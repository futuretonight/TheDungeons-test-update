plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

group = 'plazmer'
version = '3.0.1'

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    // Spigot API * start
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    // Spigot API * end

    // Holographic Displays
    maven { url = 'https://repo.codemc.io/repository/maven-public/' }
    //WorldGuard API
    maven { url = 'https://maven.enginehub.org/repo/' }
    // PAPI
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }

    maven { url = 'https://jitpack.io' }
    maven { url = 'https://libraries.minecraft.net/' }
    maven { url = 'https://nexus.phoenixdevt.fr/repository/maven-public/' }

    // griefdefender
    maven { url = 'https://repo.glaremasters.me/repository/bloodshot' }

    // PaF
    maven { url = 'https://simonsator.de/repo/' }

    // towny
    maven { url = 'https://repo.glaremasters.me/repository/towny/' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.21-R0.1-SNAPSHOT'
    implementation "io.papermc:paperlib:1.0.7"

    // worldedit
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.3.5-SNAPSHOT'
    compileOnly 'com.sk89q.worldedit:worldedit-core:7.3.5-SNAPSHOT'
    //updated worldedit to latest version as per 31/7/24.


    // party
    compileOnly 'de.simonsator:spigot-party-api-for-party-and-friends:1.0.7-RELEASE'
    compileOnly 'de.simonsator:Party-and-Friends-MySQL-Edition-Spigot-API:1.5.4-RELEASE'

    // regions
    compileOnly 'com.palmergames.bukkit.towny:towny:0.100.0.0'
    //removed griefdefender because i am unable to find it
    // compileOnly group: 'com.griefdefender', name: 'api', version: '2.1.0-SNAPSHOT'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.2-SNAPSHOT'
    compileOnly 'com.github.cryptomorin:kingdoms:1.16.20.5'
    // removed protection blocks because t doesnot exists
    // compileOnly 'com.github.getplusm:ProtectionBlocks:1.0.7'
    //updated towny, worldguard and kingdoms to latest version as per 1/8/24.

    compileOnly 'com.github.TechFortress:GriefPrevention:16.18'
    compileOnly 'com.github.angeschossen:LandsAPI:7.8.10'
    // updated griefprevention and lands api to latest versions as per 1/8/24.


    // holo
    compileOnly 'me.filoghost.holographicdisplays:holographicdisplays-api:3.0.5'
    compileOnly 'com.github.decentsoftware-eu:decentholograms:2.8.9'
    // updated holograms to latest as per 1/8/24.

    // https://mvnrepository.com/artifact/com.github.LoneDev6/api-itemsadder
    compileOnly group: 'com.github.LoneDev6', name: 'api-itemsadder', version: '3.0.0'
    compileOnly 'net.Indyuce:MMOItems-API:6.9.2-SNAPSHOT'
    // where did you get the 6.9.2 snapshot?!
    compileOnly 'io.lumine:MythicLib-dist:5.6.2-SNAPSHOT'
    // updated itemsadder and mythiclib-dist as pe 1/8/24.

    // PAPI
    compileOnly 'me.clip:placeholderapi:2.11.3'
    compileOnly 'com.mojang:authlib:1.5.21'
    // i dodnot update these coz theyre stable. (1/8/24).

    // LP
    compileOnly 'net.luckperms:api:5.4'
    // its upto date
    // Vault
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7.1'
    compileOnly 'net.milkbowl.vault:VaultUnlockedAPI:2.1'
    // updated vaultAPI and added a remastered VaultAPI. (1/8/24).

    // Engine
    compileOnly 'com.github.getplusm:PLAZMER-ENGINE:2.4.6'

    // Libs
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate "io.papermc.lib", "t.me.p1azmer.libs.paperlib"
    archivesBaseName = "TheDungeons"
    archiveClassifier.set ""
    destinationDirectory.set(rootProject.buildDir)
}
assemble.dependsOn(shadowJar)